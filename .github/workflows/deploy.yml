name: Deploy Modulos to Remote Servers

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      cliente:
        description: 'Cliente específico a desplegar'
        required: true
        type: choice
        options:
          - gaesa
          - gaesademo
          - acricolor

jobs:
  deploy-single:
    if: github.event_name == 'workflow_dispatch'
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Deploy using SSH
        shell: bash
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SSH_USER: root
          CLIENTE: ${{ github.event.inputs.cliente }}
        run: |
          # Configuración de despliegue por cliente
          declare -A CLIENT_CONFIG
          CLIENT_CONFIG["gaesa"]="192.168.102.7:/var/www/appgaesa/src/:systemctl restart appgaesa"
          CLIENT_CONFIG["gaesademo"]="192.168.200.11:/home/gaesa/src/:docker restart gaesa"
          CLIENT_CONFIG["acricolor"]="192.168.200.11:/home/acricolor/src/:docker restart acricolor"
          
          # Obtener configuración del cliente
          IFS=':' read -r targetServer targetPath restartCommand <<< "${CLIENT_CONFIG[$CLIENTE]}"
          
          # Asegurar que el directorio existe y tiene los permisos correctos
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$targetServer" "mkdir -p $targetPath && chmod -R 755 $targetPath"
          
          # Realizar el despliegue (copiar todo excepto index.js)
          sshpass -p "$SSH_PASSWORD" rsync -avz -e 'ssh -o StrictHostKeyChecking=no' --delete --exclude 'index.js' ./src/ "$SSH_USER@$targetServer:$targetPath"
          
          # Asegurar permisos después del despliegue
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$targetServer" "chmod -R 755 $targetPath"
          
          # Reiniciar el servicio
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$targetServer" "$restartCommand"

  deploy-all:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: self-hosted
    strategy:
      matrix:
        cliente: [
          'gaesa',
          'gaesademo',
          'acricolor'
        ]
      fail-fast: false
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Deploy using SSH
        shell: bash
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SSH_USER: root
          CLIENTE: ${{ matrix.cliente }}
        run: |
          # Configuración de despliegue por cliente
          declare -A CLIENT_CONFIG
          CLIENT_CONFIG["gaesa"]="192.168.102.7:/var/www/appgaesa/src/:systemctl restart appgaesa"
          CLIENT_CONFIG["gaesademo"]="192.168.200.11:/home/gaesa/src/:docker restart gaesa"
          CLIENT_CONFIG["acricolor"]="192.168.200.11:/home/acricolor/src/:docker restart acricolor"
          
          # Obtener configuración del cliente
          IFS=':' read -r targetServer targetPath restartCommand <<< "${CLIENT_CONFIG[$CLIENTE]}"
          
          # Asegurar que el directorio existe y tiene los permisos correctos
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$targetServer" "mkdir -p $targetPath && chmod -R 755 $targetPath"
          
          # Realizar el despliegue (copiar todo excepto index.js)
          sshpass -p "$SSH_PASSWORD" rsync -avz -e 'ssh -o StrictHostKeyChecking=no' --delete --exclude 'index.js' ./src/ "$SSH_USER@$targetServer:$targetPath"
          
          # Asegurar permisos después del despliegue
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$targetServer" "chmod -R 755 $targetPath"
          
          # Reiniciar el servicio
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$targetServer" "$restartCommand"